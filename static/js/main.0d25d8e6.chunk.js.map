{"version":3,"sources":["components/Signin/SignIn.js","components/Register/Register.js","components/Weather/WeatherCard/WeatherCard.js","components/Weather/WeatherContainer/WeatherContainer.js","components/Loading/Loading.js","components/ErrorBoundary/ErrorBoundry.js","constants/constants.js","containers/App/App.js","actions/actions.js","components/Clouds/Clouds.js","components/NavBar/Navbar.js","components/ProtectedRoute/ProtectedRoute.js","components/Profile/Profile.js","containers/Router/Router.js","serviceWorker.js","reducer/reducer.js","index.js"],"names":["useStyles","makeStyles","theme","body","backgroundColor","palette","common","white","paper","marginTop","spacing","display","flexDirection","alignItems","avatar","margin","secondary","main","form","width","color","submit","credentials","SignIn","props","useState","signInEmail","setSignInEmail","signInPassword","setSignInPassword","wrongCredential","setWrongCredential","classes","Container","component","maxWidth","CssBaseline","className","Avatar","Typography","variant","noValidate","TextField","required","fullWidth","id","label","name","autoComplete","onChange","e","target","value","autoFocus","type","Button","onClick","fetch","method","headers","JSON","stringify","email","password","then","response","json","user","loadUserProfile","logIn","history","push","catch","err","console","log","Grid","container","item","xs","to","Box","mt","Register","registerEmail","setRegisterEmail","registerPassword","setRegisterPassword","registerFirstName","setRegisterFirstName","registerLastName","setRegisterLastName","passWordValid","setPassWordValid","emailValid","setEmailValid","sm","error","firstName","length","lastName","passWord","match","firstname","lastname","justify","card","flexGrow","media","height","paddingLeft","tc","textAlign","marginBottom","bt","WeatherCard","city","country","description","icon","windSpeed","temp","humidity","foreCast","isLogin","saveWeather","deleteWeather","index","save","isSaved","setWeatherCardSave","arrayDays","map","day","i","key","date","maxTemp","src","alt","minTemp","xor","Card","raised","CardHeader","title","CardContent","CardMedia","event","WeatherContainer","weatherData","foreCastData","saveWeatherProfile","deleteWeatherProfile","data","dt_txt","split","filter","arr","indexOf","forecast","dateForeCast","groupforecast","min","max","forEach","Number","Math","ceil","Date","weather","sys","wind","speed","Loading","ErrorBoundry","state","hasError","this","setState","children","Component","API_KEY","App","searchField","toLowerCase","onRequestWeatherForecast","onRequestWeather","weatherForecast","isPendingWeather","isPendingWeatherForecast","cod","list","connect","requestWeather","errorWeather","requestWeatherForecast","errorForecast","userLogIn","bol","dispatch","res","payload","Clouds","nav","opacity","background","link","textDecoration","root","menuButton","marginRight","search","position","borderRadius","shape","fade","marginLeft","breakpoints","up","searchIcon","pointerEvents","justifyContent","inputRoot","inputInput","padding","transition","transitions","create","Navbar","onSearch","logInAndRegister","logOut","AppBar","Toolbar","InputBase","placeholder","input","inputProps","onKeyDown","ProtectedRoute","rest","render","pathname","from","location","initialState","allUserWeatherLoc","savedWeather","Profile","run","locs","a","getWeather","obj","cur","weatherlocation","urls","promiseFetch","Promise","all","url","results","addToWeatherLoc","curState","weatherLoc","currentTarget","saved","deleted","filtered","onRequestWeatherAndForecast","prevProps","prevState","myWeatherLoc","direction","searchWeather","loadUser","isPendingWeatherAndForecast","requestWeatherAndForecast","RouterApp","resetWeatherForeCastNav","resetWeatherNav","path","exact","resetWeatherIn","resetWeatherForeCastIn","keyCode","which","Boolean","window","hostname","initialStateSearch","initialStateWeather","initialStateWeatherForecast","initialStateWeatherAndForecast","initialUser","initialLog","logger","createLogger","rootReducer","combineReducers","action","Object","assign","store","createStore","applyMiddleware","thunkMiddleware","ReactDOM","Router","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.0d25d8e6.chunk.js","sourcesContent":["import React, {useState} from 'react';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Button from '@material-ui/core/Button';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Box from '@material-ui/core/Box';\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Container from '@material-ui/core/Container';\r\nimport { Link } from \"react-router-dom\";\r\nimport './Signin.css';\r\n\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  '@global': {\r\n    body: {\r\n      backgroundColor: theme.palette.common.white,\r\n    },\r\n  },\r\n  paper: {\r\n    marginTop: theme.spacing(8),\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.secondary.main,\r\n  },\r\n  form: {\r\n    width: '100%', // Fix IE 11 issue.\r\n    marginTop: theme.spacing(1),\r\n    color: 'white'\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n  credentials: {\r\n    marginTop: theme.spacing(1),\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n    color: 'green'\r\n  }\r\n}));\r\n\r\n\r\nconst SignIn = (props) => {\r\n\r\n  //state of the email\r\n  const [signInEmail,setSignInEmail] = useState('');\r\n  const [signInPassword,setSignInPassword] = useState('');\r\n  const [wrongCredential, setWrongCredential] = useState(false);\r\n\r\n  const onEmailChange = (e) => {\r\n    setSignInEmail(e.target.value);\r\n  }\r\n\r\n  const onPassWordChange = (e) => {\r\n    setSignInPassword(e.target.value);\r\n  }\r\n\r\n  const onSubmitSignIn = () => { \r\n    fetch('https://calm-earth-15616.herokuapp.com/signin', {\r\n        method: 'post',\r\n        headers: {'Content-Type': 'application/json'},\r\n        body: JSON.stringify({\r\n          email: signInEmail,\r\n          password: signInPassword\r\n        })\r\n      })\r\n      .then(response => response.json())\r\n      .then(user => {\r\n        if(user !== \"wrong credentials\"){\r\n          props.loadUserProfile(user);\r\n          props.logIn(true);\r\n          setWrongCredential(false);\r\n          props.history.push(\"/profile\"); \r\n        }else{\r\n          setWrongCredential(true);\r\n        }\r\n      })\r\n      .catch(err => console.log(err)); \r\n  }\r\n  \r\n  const classes = useStyles();\r\n\r\n\r\n\r\n  return (\r\n    <Container component=\"main\" maxWidth=\"xs\">\r\n      <CssBaseline />\r\n      <div className={classes.paper}>\r\n        <Avatar className={classes.avatar}>\r\n          <LockOutlinedIcon />\r\n        </Avatar>\r\n        <Typography component=\"h1\" variant=\"h5\">\r\n          Login\r\n        </Typography>\r\n        <form className={classes.form} noValidate>\r\n          <TextField\r\n            variant=\"outlined\"\r\n            margin=\"normal\"\r\n            required\r\n            fullWidth\r\n            id=\"email\"\r\n            label=\"Email Address\"\r\n            name=\"email\"\r\n            autoComplete=\"email\"\r\n            onChange={onEmailChange}\r\n            autoFocus\r\n           \r\n          />\r\n          <TextField\r\n            variant=\"outlined\"\r\n            margin=\"normal\"\r\n            required\r\n            fullWidth\r\n            name=\"password\"\r\n            label=\"Password\"\r\n            type=\"password\"\r\n            id=\"password\"\r\n            onChange={onPassWordChange}\r\n            autoComplete=\"current-password\"\r\n          />\r\n          {wrongCredential ? <div className={classes.credentials}>Wrong Credentials</div> : <div></div> }\r\n          <Button\r\n            fullWidth\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            className={classes.submit}\r\n            onClick={onSubmitSignIn}\r\n          >\r\n            Sign In\r\n          </Button>\r\n          <Grid container>\r\n            <Grid item xs>\r\n            </Grid>\r\n            <Grid item>\r\n              <Link to=\"/register\" variant=\"body2\">\r\n                {\"Don't have an account? Register\"}\r\n              </Link>\r\n            </Grid>\r\n          </Grid>\r\n        </form>\r\n      </div>\r\n      <Box mt={8}>\r\n        {/* <Copyright /> */}\r\n      </Box>\r\n    </Container>\r\n  );\r\n\r\n}\r\n\r\nexport default SignIn;","import React, { useState } from \"react\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport LockOutlinedIcon from \"@material-ui/icons/LockOutlined\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  \"@global\": {\r\n    body: {\r\n      backgroundColor: theme.palette.common.white\r\n    }\r\n  },\r\n  paper: {\r\n    marginTop: theme.spacing(8),\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\"\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.secondary.main\r\n  },\r\n  form: {\r\n    width: \"100%\", // Fix IE 11 issue.\r\n    marginTop: theme.spacing(3)\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2)\r\n  }\r\n}));\r\n\r\nconst Register = props => {\r\n  const classes = useStyles();\r\n\r\n  const [registerEmail, setRegisterEmail] = useState(\"\");\r\n  const [registerPassword, setRegisterPassword] = useState(\"\");\r\n  const [registerFirstName, setRegisterFirstName] = useState(\"\");\r\n  const [registerLastName, setRegisterLastName] = useState(\"\");\r\n  const [passWordValid, setPassWordValid] = useState(true);\r\n  const [emailValid, setEmailValid] = useState(false);\r\n\r\n  const onEmailChange = e => {\r\n    setRegisterEmail(e.target.value);\r\n  };\r\n\r\n  const onPassWordChange = e => {\r\n    setRegisterPassword(e.target.value);\r\n  };\r\n\r\n  const onFirstNameChange = e => {\r\n    setRegisterFirstName(e.target.value);\r\n  };\r\n\r\n  const onLastNameChange = e => {\r\n    setRegisterLastName(e.target.value);\r\n  };\r\n\r\n  const onSubmit = () => {\r\n    const firstName = registerFirstName.length > 0;\r\n    const lastName = registerLastName.length > 0;\r\n    const rePassword = /(?=.*\\d)(?=.*[a-z])(?=.*[A-Z]).{8,}/;\r\n    const reEmail = /^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/;\r\n    const passWord = registerPassword.match(rePassword);\r\n    const email = registerEmail.match(reEmail);\r\n    setPassWordValid(passWord);\r\n    setEmailValid(!email);\r\n    if (firstName && lastName && passWord && email) {\r\n      fetch('https://calm-earth-15616.herokuapp.com/register', {\r\n        method: 'post',\r\n        headers: {'Content-Type': 'application/json'},\r\n        body: JSON.stringify({\r\n          firstname: registerFirstName,\r\n          lastname: registerLastName,\r\n          email: registerEmail,\r\n          password: registerPassword\r\n        })\r\n      })\r\n      .then(response => response.json())\r\n      .then(user => {\r\n        if(user){\r\n          props.loadUserProfile(user);\r\n          props.logIn(true);\r\n          props.history.push(\"/profile\"); \r\n        }\r\n      }) \r\n    }\r\n  };\r\n\r\n  const passwordFormat = () => {\r\n    return (\r\n      <div id=\"message\">\r\n        <h3>Password must contain the following:</h3>\r\n        <p id=\"letter\" className=\"invalid\">\r\n          A <b>lowercase</b> letter\r\n        </p>\r\n        <p id=\"capital\" className=\"invalid\">\r\n          A <b>capital (uppercase)</b> letter\r\n        </p>\r\n        <p id=\"number\" className=\"invalid\">\r\n          A <b>number</b>\r\n        </p>\r\n        <p id=\"length\" className=\"invalid\">\r\n          Minimum <b>8 characters</b>\r\n        </p>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <Container component=\"main\" maxWidth=\"xs\">\r\n      <CssBaseline />\r\n      <div className={classes.paper}>\r\n        <Avatar className={classes.avatar}>\r\n          <LockOutlinedIcon />\r\n        </Avatar>\r\n        <Typography component=\"h1\" variant=\"h5\">\r\n          Register\r\n        </Typography>\r\n        <form className={classes.form} noValidate>\r\n          <Grid container spacing={2}>\r\n            <Grid item xs={12} sm={6}>\r\n              <TextField\r\n                autoComplete=\"fname\"\r\n                name=\"firstName\"\r\n                variant=\"outlined\"\r\n                required\r\n                fullWidth\r\n                id=\"firstName\"\r\n                label=\"First Name\"\r\n                onChange={onFirstNameChange}\r\n                autoFocus\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12} sm={6}>\r\n              <TextField\r\n                variant=\"outlined\"\r\n                required\r\n                fullWidth\r\n                id=\"lastName\"\r\n                label=\"Last Name\"\r\n                name=\"lastName\"\r\n                onChange={onLastNameChange}\r\n                autoComplete=\"lname\"\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                variant=\"outlined\"\r\n                type=\"email\"\r\n                required\r\n                fullWidth\r\n                id=\"email\"\r\n                label=\"Email Address\"\r\n                name=\"email\"\r\n                onChange={onEmailChange}\r\n                autoComplete=\"email\"\r\n                error={emailValid}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                variant=\"outlined\"\r\n                required\r\n                fullWidth\r\n                name=\"password\"\r\n                label=\"Password\"\r\n                type=\"password\"\r\n                id=\"password\"\r\n                onChange={onPassWordChange}\r\n                autoComplete=\"current-password\"\r\n                error={!passWordValid}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              {passWordValid ? <div></div> : passwordFormat()}\r\n            </Grid>\r\n          </Grid>\r\n          <Button\r\n            fullWidth\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            className={classes.submit}\r\n            onClick={onSubmit}\r\n          >\r\n            Register\r\n          </Button>\r\n          <Grid container justify=\"flex-end\">\r\n            <Grid item>\r\n              <Link to=\"/login\" variant=\"body2\">\r\n                Already have an account? Sign in\r\n              </Link>\r\n            </Grid>\r\n          </Grid>\r\n        </form>\r\n      </div>\r\n      <Box mt={5}>\r\n      </Box>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Register;\r\n","import React, { useState } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport CardHeader from \"@material-ui/core/CardHeader\";\r\nimport CardMedia from \"@material-ui/core/CardMedia\";\r\nimport Button from \"@material-ui/core/Button\";\r\n\r\nconst useStyles = makeStyles({\r\n  card: {\r\n    maxWidth: 350,\r\n    flexGrow: 1,\r\n    backgroundColor: \"white\"\r\n  },\r\n  media: {\r\n    width: \"100px\",\r\n    height: \"auto\",\r\n    paddingLeft: \"20px\"\r\n  },\r\n  tc: {\r\n    textAlign: \"center\"\r\n  },\r\n  margin: {\r\n    marginTop: \"50px\",\r\n    marginBottom: \"25px\"\r\n  },\r\n  bt: {\r\n    margin: \"0px 50px 10px\"\r\n  }\r\n});\r\n\r\nconst WeatherCard = ({\r\n  city,\r\n  country,\r\n  description,\r\n  icon,\r\n  windSpeed,\r\n  temp,\r\n  humidity,\r\n  foreCast,\r\n  isLogin,\r\n  saveWeather,\r\n  deleteWeather,\r\n  index,\r\n  save\r\n}) => {\r\n  const [isSaved, setWeatherCardSave] = useState(true);\r\n\r\n  const saveWeatherCard = event => {\r\n    saveWeather(event);\r\n    setWeatherCardSave(false);\r\n  };\r\n\r\n  const deleteWeatherCard = event => {\r\n    deleteWeather(event);\r\n  };\r\n\r\n  const classes = useStyles();\r\n  const arrayDays = foreCast.map((day, i) => {\r\n    return (\r\n      <Grid className={`${classes.tc}`} key={i} item xs={2}>\r\n        <Typography component=\"p\">{day.date}</Typography>\r\n        <br />\r\n        <Typography component=\"p\">{day.maxTemp}f</Typography>\r\n        <img\r\n          src={`http://openweathermap.org/img/wn/${day.icon}.png`}\r\n          alt=\"icon\"\r\n        />\r\n        <Typography component=\"p\">{day.minTemp}f</Typography>\r\n      </Grid>\r\n    );\r\n  });\r\n  const xor = ((!isSaved && save) || (isSaved && !save)) ? true : false;\r\n  return (\r\n    <Card raised justify=\"space-evenly\" className={classes.card}>\r\n      <Grid container spacing={0}>\r\n        <Grid item xs={12}>\r\n          <CardHeader title={`${city},${country}`} />\r\n        </Grid>\r\n        <Grid item xs={12}>\r\n          <CardContent>\r\n            <h4>\r\n              {description}{\" \"}\r\n              <span>\r\n                Wind {windSpeed}m/h <span>Huminity {humidity}</span>\r\n              </span>\r\n            </h4>\r\n          </CardContent>\r\n        </Grid>\r\n        <Grid item xs={6} sm={6}>\r\n          <CardMedia\r\n            component=\"img\"\r\n            className={classes.media}\r\n            src={`http://openweathermap.org/img/wn/${icon}.png`}\r\n            title=\"Icon\"\r\n          />\r\n        </Grid>\r\n        <Grid className={classes.tc} item xs={6} sm={6}>\r\n          <h2>{temp}f</h2>\r\n        </Grid>\r\n        <Grid className={classes.margin} item xs={12}>\r\n          <Grid justify=\"space-around\" container spacing={0}>\r\n            {arrayDays}\r\n          </Grid>\r\n        </Grid>\r\n        {isLogin ? (\r\n          <Grid container>\r\n            <Grid item xs={6} sm={6}>\r\n              <Button\r\n                className={classes.bt}\r\n                onClick={deleteWeatherCard}\r\n                value={`${index}-${city},${country}`}\r\n              >\r\n                Delete\r\n              </Button>\r\n            </Grid>\r\n            { xor ? (\r\n              <Grid item xs={6} sm={6}>\r\n                <Button\r\n                  className={classes.bt}\r\n                  onClick={saveWeatherCard}\r\n                  value={`${city},${country}`}\r\n                >\r\n                  Save\r\n                </Button>\r\n              </Grid>\r\n            ) : (\r\n              <Grid item xs={6} sm={6}></Grid>\r\n            )}\r\n          </Grid>\r\n        ) : (\r\n          <div></div>\r\n        )}\r\n      </Grid>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default WeatherCard;\r\n","import React from 'react';\r\nimport WeatherCard from '../WeatherCard/WeatherCard';\r\nimport './WeatherContainer.css';\r\nconst WeatherContainer = ({weatherData,foreCastData, isLogin, saveWeatherProfile, deleteWeatherProfile,index,save}) => {\r\n\r\n    //Get All the Dates\r\n    const dateKey = foreCastData.map((data) => {\r\n        const date = data.dt_txt.split(/[ ]+/)[0];\r\n        return date;\r\n    })\r\n    //Only Keep Distinct Dates\r\n    const distinctDateKey = dateKey.filter((date,index,arr) => {\r\n        return arr.indexOf(date) === index;\r\n    })\r\n\r\n    //Group all forecast by dates\r\n    const groupForeCastByDate = distinctDateKey.map(date => {\r\n        return foreCastData.filter(forecast => {\r\n            const dateForeCast = forecast.dt_txt.split(/[ ]+/)[0];\r\n            return date === dateForeCast;\r\n        })\r\n    })\r\n\r\n    const saveWeather = (event) => {\r\n        saveWeatherProfile(event);\r\n    }\r\n    \r\n    const deleteWeather = (event) => {\r\n        deleteWeatherProfile(event);\r\n    }\r\n    //Go to each group array and get its min temp and max temp. get the date. icon\r\n    const foreCast = groupForeCastByDate.map(groupforecast => {\r\n        let min = 100000;\r\n        let max = -100000;\r\n        let date = '';\r\n        let icon = '';\r\n        groupforecast.forEach(forecast => {\r\n          \r\n            if(Number(forecast.main.temp) < min){\r\n                min = Math.ceil(forecast.main.temp);\r\n            }\r\n\r\n            if(Number(forecast.main.temp) > max){\r\n                max = Math.ceil(forecast.main.temp);\r\n                const temp = new Date(forecast.dt_txt.split(/[ ]+/)[0])+\"\";\r\n                date = temp.split(/[ ]+/)[0];\r\n                icon = forecast.weather[0].icon;\r\n            }\r\n        })\r\n        return {\r\n            maxTemp: max,\r\n            minTemp: min,\r\n            date: date,\r\n            icon: icon\r\n        }\r\n    })\r\n   \r\n   \r\n    console.log(\"this is before\", weatherData);\r\n    return ( \r\n   \r\n    <div className=\"weather\">\r\n        <WeatherCard \r\n        city={weatherData.name} \r\n        country={weatherData.sys.country}\r\n        description={weatherData.weather[0].main}\r\n        icon={weatherData.weather[0].icon}\r\n        windSpeed={weatherData.wind.speed}\r\n        temp={weatherData.main.temp}\r\n        humidity={weatherData.main.humidity}\r\n        foreCast={foreCast}\r\n        isLogin={isLogin}\r\n        saveWeather={saveWeather}\r\n        deleteWeather={deleteWeather}\r\n        index={index}\r\n        save={save}\r\n        />\r\n    </div> \r\n    )\r\n}\r\n\r\nexport default WeatherContainer;","import React from \"react\";\r\nimport './Loading.css';\r\nconst Loading = () => {\r\n  return (\r\n    <div className=\"lds-spinner\">\r\n      <div></div>\r\n      <div></div>\r\n      <div></div>\r\n      <div></div>\r\n      <div></div>\r\n      <div></div>\r\n      <div></div>\r\n      <div></div>\r\n      <div></div>\r\n      <div></div>\r\n      <div></div>\r\n      <div></div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Loading;\r\n","import React, {Component} from 'react';\r\n\r\nclass ErrorBoundry extends Component {\r\n    constructor(props){//allow access to props\r\n        super(props);\r\n        this.state = {\r\n            hasError: false\r\n        }\r\n    }\r\n\r\n    componentDidCatch(){//Similar to try catch. If any error occur in the children this components run\r\n        this.setState({hasError: true});\r\n    }\r\n\r\n    render(){\r\n        if(this.state.hasError){\r\n            return <h1>Oooops. That is not good</h1>\r\n        }else{\r\n            return this.props.children;//anything between the Error Boundary\r\n        }\r\n    }\r\n}\r\n\r\nexport default ErrorBoundry;","export const CHANGE_SEARCH_FIELD = 'CHANGE_SEARCH_FIELD';\r\n\r\n//see if the user is log in\r\nexport const USER_LOG_IN = 'USER_LOG_IN';\r\n\r\n//request for the weather data asynchronous\r\nexport const REQUEST_WEATHER_PENDING = 'REQUEST_WEATHER_PENDING'\r\nexport const REQUEST_WEATHER_SUCCESS = 'REQUEST_WEATHER_SUCCESS'\r\nexport const REQUEST_WEATHER_FAILED = 'REQUEST_WEATHER_FAILED'\r\nexport const REQUEST_WEATHER_RESET = \"REQUEST_WEATHER_RESET\"\r\n//request for the fiveday forecast data \r\n//request for the weather data asynchronous\r\nexport const REQUEST_WEATHER_FORECAST_PENDING = 'REQUEST_WEATHER_FORECAST_PENDING'\r\nexport const REQUEST_WEATHER_FORECAST_SUCCESS = 'REQUEST_WEATHER_FORECAST_SUCCESS'\r\nexport const REQUEST_WEATHER_FORECAST_FAILED = 'REQUEST_WEATHER_FORECAST_FAILED'\r\nexport const REQUEST_WEATHER_FORECAST_RESET = 'REQUEST_WEATHER_FORECAST_RESET'\r\n\r\n//request for the weather data asynchronous\r\nexport const REQUEST_WEATHER_AND_FORECAST_PENDING = 'REQUEST_WEATHER_AND_FORECAST_PENDING'\r\nexport const REQUEST_WEATHER_AND_FORECAST_SUCCESS = 'REQUEST_WEATHER_AND_FORECAST_SUCCESS'\r\nexport const REQUEST_WEATHER_AND_FORECAST_FAILED = 'REQUEST_WEATHER_AND_FORECAST_FAILED'\r\nexport const REQUEST_WEATHER_AND_FORECAST_RESET = 'REQUEST_WEATHER_AND_FORECAST_RESET'\r\n\r\n//request for user information from the server\r\nexport const LOAD_USER = 'LOAD_USER'\r\n\r\n//all the user weather location\r\nexport const USER_WEATHER_LOCATION = \" USER_WEATHER_LOCATION\";\r\n\r\n//APIKEY\r\nexport const API_KEY = \"640285b24dd4963e697ea5be67cf8165\";","import React, { Component } from \"react\";\r\nimport \"typeface-roboto\";\r\nimport \"./App.css\";\r\nimport {connect} from 'react-redux';\r\nimport WeatherContainer from \"../../components/Weather/WeatherContainer/WeatherContainer\";\r\nimport Loading from \"../../components/Loading/Loading\";\r\nimport ErrorBoundary from \"../../components/ErrorBoundary/ErrorBoundry\";\r\nimport {requestWeather, requestWeatherForecast } from '../../actions/actions';\r\n\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    weather: state.requestWeather.weather,\r\n    isPendingWeather: state.requestWeather.isPendingWeather,\r\n    errorWeather: state.requestWeather.error,\r\n    weatherForecast: state.requestWeatherForecast.weatherForecast,\r\n    isPendingWeatherForecast: state.requestWeatherForecast.isPendingWeatherForecast,\r\n    errorForecast: state.requestWeatherForecast.errorForecast,\r\n    isLogin: state.userLogIn.bol\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    onRequestWeather: (type,city,country) => dispatch(requestWeather(type,city,country)),\r\n    onRequestWeatherForecast: (type,city,country) => dispatch(requestWeatherForecast(type,city,country))\r\n  }\r\n}\r\n\r\nclass App extends Component {\r\n  \r\n  componentDidMount() {\r\n    const split = this.props.searchField.toLowerCase().split(/[ ,]+/);//split the string by \" \" or ,\r\n    console.log(split);\r\n    if (split.length === 2) {\r\n      const city = split[0];\r\n      const country = split[1];\r\n      console.log(\"This is the app\");\r\n      this.props.onRequestWeatherForecast('forecast',city,country);\r\n      this.props.onRequestWeather('weather',city,country);\r\n   \r\n    }\r\n\r\n    if (split.length === 3) {\r\n      const city = split[0] + \" \" + split[1];\r\n      const country = split[2];\r\n      this.props.onRequestWeatherForecast('forecast',city,country);\r\n      this.props.onRequestWeather('weather',city,country);\r\n    }\r\n  }  \r\n\r\n  render() {\r\n    // const { weatherData, foreCastData } = this.state;\r\n   \r\n    const {weather,weatherForecast,isPendingWeather,isPendingWeatherForecast, isLogin} = this.props;\r\n    return (\r\n      <div>\r\n        <ErrorBoundary>\r\n          {((!isPendingWeather && !isPendingWeatherForecast) && weather.cod === 200 && weatherForecast.cod === \"200\") ? (\r\n            <WeatherContainer\r\n              weatherData={weather}\r\n              foreCastData={weatherForecast.list}\r\n              isLogin={isLogin}\r\n            />\r\n          ) : (\r\n            <Loading />\r\n          )}\r\n        </ErrorBoundary>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps,mapDispatchToProps)(App);\r\n","import {\r\n  CHANGE_SEARCH_FIELD,\r\n  USER_LOG_IN,\r\n  REQUEST_WEATHER_PENDING,\r\n  REQUEST_WEATHER_SUCCESS,\r\n  REQUEST_WEATHER_FAILED,\r\n  REQUEST_WEATHER_FORECAST_PENDING,\r\n  REQUEST_WEATHER_FORECAST_SUCCESS,\r\n  REQUEST_WEATHER_FORECAST_FAILED,\r\n  REQUEST_WEATHER_FORECAST_RESET,\r\n  REQUEST_WEATHER_AND_FORECAST_PENDING,\r\n  REQUEST_WEATHER_AND_FORECAST_SUCCESS,\r\n  REQUEST_WEATHER_AND_FORECAST_FAILED,\r\n  REQUEST_WEATHER_AND_FORECAST_RESET,\r\n  LOAD_USER,\r\n  REQUEST_WEATHER_RESET,\r\n  API_KEY\r\n} from \"../constants/constants\";\r\n\r\nexport const setSearchField = text => {\r\n  return {\r\n    type: CHANGE_SEARCH_FIELD,\r\n    payload: text\r\n  };\r\n};\r\n\r\nexport const loadUser = user => {\r\n  return {\r\n    type: LOAD_USER,\r\n    payload: user\r\n  };\r\n};\r\n\r\nexport const userLogIn = bol => {\r\n  return {\r\n    type: USER_LOG_IN,\r\n    payload: bol\r\n  };\r\n};\r\n\r\nexport const requestWeather = (type, city, country) => dispatch => {\r\n  dispatch({ type: REQUEST_WEATHER_PENDING });\r\n  fetch(\r\n    `https://cors-anywhere.herokuapp.com/http://api.openweathermap.org/data/2.5/${type}?q=${city},${country}&appid=${API_KEY}&units=imperial`\r\n  )\r\n    .then(res => {\r\n      return res.json();\r\n    })\r\n    .then(data => {\r\n      dispatch({ type: REQUEST_WEATHER_SUCCESS, payload: data });\r\n    })\r\n    .catch(err => {\r\n      dispatch({ type: REQUEST_WEATHER_FAILED, payload: err });\r\n    });\r\n};\r\n\r\nexport const requestWeatherForecast = (type, city, country) => dispatch => {\r\n  dispatch({ type: REQUEST_WEATHER_FORECAST_PENDING });\r\n  fetch(\r\n    `https://cors-anywhere.herokuapp.com/https://cors-anywhere.herokuapp.com/http://api.openweathermap.org/data/2.5/${type}?q=${city},${country}&appid=${API_KEY}&units=imperial`\r\n  )\r\n    .then(res => {\r\n      return res.json();\r\n    })\r\n    .then(data => {\r\n      dispatch({ type: REQUEST_WEATHER_FORECAST_SUCCESS, payload: data });\r\n    })\r\n    .catch(err => {\r\n      dispatch({ type: REQUEST_WEATHER_FORECAST_FAILED, payload: err });\r\n    });\r\n};\r\n\r\nexport const requestWeatherAndForecast = (city, country) => dispatch => {\r\n  console.log(\"request and weather \", city);\r\n  console.log(\"country\", country);\r\n  dispatch({ type: REQUEST_WEATHER_AND_FORECAST_PENDING });\r\n  const urls = [\r\n    `https://cors-anywhere.herokuapp.com/https://cors-anywhere.herokuapp.com/http://api.openweathermap.org/data/2.5/weather?q=${city},${country}&appid=${API_KEY}&units=imperial`,\r\n    `https://cors-anywhere.herokuapp.com/https://cors-anywhere.herokuapp.com/http://api.openweathermap.org/data/2.5/forecast?q=${city},${country}&appid=${API_KEY}&units=imperial`\r\n  ];\r\n  \r\n  Promise.all(urls.map(url => fetch(url).then(res => res.json())))\r\n  .then(results => {\r\n    console.log(\"results\", results);\r\n    dispatch({type: REQUEST_WEATHER_AND_FORECAST_SUCCESS, payload: results})\r\n  })\r\n  .catch( err => {\r\n    dispatch({type: REQUEST_WEATHER_AND_FORECAST_FAILED, payload: err})\r\n  })\r\n};\r\n\r\nexport const resetWeather = () => {\r\n  return { type: REQUEST_WEATHER_RESET };\r\n};\r\n\r\nexport const resetWeatherForeCast = () => {\r\n  return { type: REQUEST_WEATHER_FORECAST_RESET };\r\n};\r\n","import React from 'react';\r\nimport './Clouds.css';\r\n\r\nconst Clouds = (props) => {\r\n    return(\r\n    \r\n    <div className=\"background-wrap\">\r\n        <div className=\"x1\">\r\n        <div className=\"cloud\"></div>\r\n    </div>\r\n\r\n    <div className=\"x2\">\r\n        <div className=\"cloud\"></div>\r\n    </div>\r\n\r\n    <div className=\"x3\">\r\n        <div className=\"cloud\"></div>\r\n    </div>\r\n\r\n    <div className=\"x4\">\r\n        <div className=\"cloud\"></div>\r\n    </div>\r\n\r\n    <div className=\"x5\">\r\n        <div className=\"cloud\"></div>\r\n    </div>\r\n    </div>\r\n    )\r\n}\r\n\r\nexport default Clouds;","import React from \"react\";\r\nimport { fade, makeStyles } from \"@material-ui/core/styles\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport InputBase from \"@material-ui/core/InputBase\";\r\nimport SearchIcon from \"@material-ui/icons/Search\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  nav: {\r\n    opacity: 1,\r\n    color: \"white\",\r\n    background: \"#00b4ff\"\r\n  },\r\n  link: {\r\n    color: \"white\",\r\n    textDecoration: \"none\"\r\n  },\r\n  root: {\r\n    flexGrow: 1\r\n  },\r\n  menuButton: {\r\n    marginRight: theme.spacing(2)\r\n  },\r\n  title: {\r\n    flexGrow: 1\r\n  },\r\n  search: {\r\n    position: \"relative\",\r\n    borderRadius: theme.shape.borderRadius,\r\n    backgroundColor: fade(theme.palette.common.white, 0.15),\r\n    \"&:hover\": {\r\n      backgroundColor: fade(theme.palette.common.white, 0.25)\r\n    },\r\n    marginRight: theme.spacing(2),\r\n    marginLeft: 0,\r\n    width: \"100%\",\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n      marginLeft: theme.spacing(3),\r\n      width: \"auto\"\r\n    }\r\n  },\r\n  searchIcon: {\r\n    width: theme.spacing(7),\r\n    height: \"100%\",\r\n    position: \"absolute\",\r\n    pointerEvents: \"none\",\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\"\r\n  },\r\n  inputRoot: {\r\n    color: \"inherit\"\r\n  },\r\n  inputInput: {\r\n    padding: theme.spacing(1, 1, 1, 7),\r\n    transition: theme.transitions.create(\"width\"),\r\n    width: \"100%\",\r\n    [theme.breakpoints.up(\"md\")]: {\r\n      width: 200\r\n    }\r\n  }\r\n}));\r\n\r\n\r\nconst Navbar = (props) => {\r\n\r\n  const {onSearch, logIn, isLogin} = props;\r\n\r\n  const onSubmit = () => {\r\n      logIn(false)\r\n  }\r\n\r\n\r\n  const classes = useStyles();\r\n  const logInAndRegister = (\r\n    <div>\r\n      <Link className={classes.link} to=\"/login\">\r\n        <Button color=\"inherit\">Login</Button>\r\n      </Link>\r\n      <Link className={classes.link} to=\"/register\">\r\n        <Button color=\"inherit\">Register</Button>\r\n      </Link>\r\n    </div>\r\n  );\r\n\r\n  const logOut = (\r\n    <Link className={classes.link} to=\"/weather\">\r\n      <Button onClick={onSubmit}  color=\"inherit\">LogOut</Button>\r\n    </Link>\r\n  );\r\n  return (\r\n    <div className={classes.root}>\r\n      <AppBar className={classes.nav} position=\"static\">\r\n        <Toolbar>\r\n          <Typography variant=\"h6\" className={classes.title}>\r\n            {isLogin ? <div>Weather App</div> : <Link className={classes.link} to=\"/weather\">\r\n              Weather App\r\n            </Link>}\r\n          </Typography>\r\n          <div className={classes.search}>\r\n            <div className={classes.searchIcon}>\r\n              <SearchIcon />\r\n            </div>\r\n            <InputBase\r\n              placeholder=\"City,Country\"\r\n              classes={{\r\n                root: classes.inputRoot,\r\n                input: classes.inputInput\r\n              }}\r\n              inputProps={{ \"aria-label\": \"search\" }}\r\n              onKeyDown={onSearch}\r\n            />\r\n          </div>\r\n        {isLogin ? logOut : logInAndRegister}     \r\n        </Toolbar>\r\n      </AppBar>\r\n\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Navbar;\r\n","import React from \"react\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\n/*\r\nparam: component\r\nparam: the rest of the props\r\nreturn Route\r\nprotects from going to pages that are protected by a login\r\n*/\r\nconst ProtectedRoute = ({ component: Component, ...rest }) => {\r\n  return (\r\n    <Route\r\n      //this is the rest of the attributes\r\n      {...rest}\r\n      render={props => {\r\n        if (rest.isLogin) {\r\n          return <Component {...props} />;\r\n        } else {\r\n          return (\r\n            <Redirect\r\n              to={{\r\n                pathname: \"/weather\",\r\n                state: {\r\n                  from: props.location\r\n                }\r\n              }}\r\n            />\r\n          );\r\n        }\r\n      }}\r\n    />\r\n  );\r\n};\r\n\r\nexport default ProtectedRoute;\r\n","import React, { Component } from \"react\";\r\nimport WeatherContainer from \"../Weather/WeatherContainer/WeatherContainer\";\r\nimport { connect } from \"react-redux\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport {\r\n  requestWeatherAndForecast\r\n} from \"../../actions/actions\";\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    searchField: state.searchWeather.searchField,\r\n    user: state.loadUser.user,\r\n    isLogin: state.userLogIn.bol,\r\n    isPendingWeatherAndForecast:\r\n      state.requestWeatherAndForecast.isPendingWeatherAndForecast,\r\n    data: state.requestWeatherAndForecast.data\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    onRequestWeatherAndForecast: (city, country) =>\r\n      dispatch(requestWeatherAndForecast(city, country))\r\n  };\r\n};\r\n\r\nconst initialState = {\r\n  allUserWeatherLoc: [],\r\n  savedWeather: []\r\n};\r\n\r\nclass Profile extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = initialState;\r\n  }\r\n\r\n  //fix\r\n  componentDidMount() {\r\n    const { id } = this.props.user;\r\n    console.log(\"this is profile componentdidmount\");\r\n    fetch(\"https://calm-earth-15616.herokuapp.com/profile\", {\r\n      method: \"post\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({\r\n        id: id\r\n      })\r\n    })\r\n      .then(response => response.json())\r\n      .then(locs => {\r\n        if (locs.length === 0) {\r\n          this.onRequestWeatherAndForecast(\"london\", \"uk\");\r\n        } else {\r\n          this.run(locs);\r\n        }\r\n      })\r\n      .catch(err => console.log(err));\r\n  }\r\n\r\n  run = async locs => {\r\n    console.log(\"locs\", locs);\r\n    for (let i = 0; i < locs.length; i++) {\r\n      let res = await this.getWeather(locs[i]);\r\n      res.push(locs[i].save);\r\n      let obj = {\r\n        weather: res[0],\r\n        forecast: res[1],\r\n        save: res[2]\r\n      };\r\n      let cur = [...this.state.allUserWeatherLoc]; //you need to this to actual copy the array not just the reference\r\n      cur.push(obj);\r\n      this.setState({ allUserWeatherLoc: cur });\r\n    }\r\n  };\r\n\r\n  getWeather = async data => {\r\n    const API_KEY = \"640285b24dd4963e697ea5be67cf8165\";\r\n    const split = data.weatherlocation.toLowerCase().split(/[,]+/); //split the string by \" \" or ,\r\n    const city = split[0];\r\n    const country = split[1];\r\n    const urls = [\r\n      `https://cors-anywhere.herokuapp.com/https://cors-anywhere.herokuapp.com/http://api.openweathermap.org/data/2.5/weather?q=${city},${country}&appid=${API_KEY}&units=imperial`,\r\n      `https://cors-anywhere.herokuapp.com/https://cors-anywhere.herokuapp.com/http://api.openweathermap.org/data/2.5/forecast?q=${city},${country}&appid=${API_KEY}&units=imperial`\r\n    ];\r\n    const promiseFetch = Promise.all(\r\n      urls.map(url => fetch(url).then(res => res.json()))\r\n    )\r\n      .then(results => {\r\n        return results;\r\n      })\r\n      .catch(err => {\r\n        return err;\r\n      });\r\n\r\n    return promiseFetch;\r\n  };\r\n\r\n  //fix\r\n  componentDidUpdate(prevProps, prevState) {\r\n    if (\r\n      prevProps.searchField !== this.props.searchField &&\r\n      this.props.searchField !== \"\"\r\n    ) {\r\n      const split = this.props.searchField.toLowerCase().split(/[ ,]+/); //split the string by \" \" or ,\r\n      if (split.length === 2) {\r\n        const city = split[0];\r\n        const country = split[1];\r\n        this.props.onRequestWeatherAndForecast(city, country);\r\n      }\r\n\r\n      if (split.length === 3) {\r\n        const city = split[0] + \" \" + split[1];\r\n        const country = split[2];\r\n        this.props.onRequestWeatherAndForecast(city, country);\r\n      }\r\n    }\r\n    console.log(\"Err data\", this.props.data);\r\n    if(this.props.data.length > 0 && this.props.data[1].cod === \"200\" ){\r\n      if(prevProps.data.length === 0){\r\n        this.addToWeatherLoc();\r\n      }else{\r\n        if(prevProps.data[0].name !== this.props.data[0].name){\r\n          this.addToWeatherLoc();\r\n        }\r\n      }\r\n\r\n    }\r\n  }\r\n  //have to fix\r\n  addToWeatherLoc = (bol = false) => {\r\n    const curState = [...this.state.allUserWeatherLoc];\r\n    const obj = {\r\n      weather: this.props.data[0],\r\n      forecast: this.props.data[1],\r\n      save: bol\r\n    };\r\n    curState.push(obj);\r\n    this.setState({ allUserWeatherLoc: curState });\r\n  };\r\n\r\n  saveWeatherProfile = event => {\r\n    const weatherLoc = event.currentTarget.value.toLowerCase();\r\n    const { id } = this.props.user;\r\n    fetch(\"https://calm-earth-15616.herokuapp.com/profile/save\", {\r\n      method: \"post\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({\r\n        id: id,\r\n        weatherLoc: weatherLoc\r\n      })\r\n    })\r\n      .then(response => response.json())\r\n      .then(saved => {\r\n      })\r\n      .catch(err => console.log(err));\r\n  };\r\n\r\n  deleteWeatherProfile = event => {\r\n    const { id } = this.props.user;\r\n    const split = event.currentTarget.value.toLowerCase().split(/[-]+/); //split the string by \" \" or ,\r\n    const index = split[0];\r\n    const weatherLoc = split[1];\r\n    fetch(\"https://calm-earth-15616.herokuapp.com/profile/delete\", {\r\n      method: \"put\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({\r\n        id: id,\r\n        weatherLoc: weatherLoc\r\n      })\r\n    })\r\n      .then(response => response.json())\r\n      .then(deleted => {\r\n        const newArr = this.state.allUserWeatherLoc;\r\n        const filtered = newArr.filter((value, i) => {\r\n          return i !== Number(index);\r\n        });\r\n        this.setState({ allUserWeatherLoc: filtered });\r\n      })\r\n      .catch(err => console.log(err));\r\n  };\r\n\r\n  render() {\r\n    const myWeatherLoc = this.state.allUserWeatherLoc.map((arr, i) => {\r\n      return (\r\n        <Grid key={i} item>\r\n          <WeatherContainer\r\n            weatherData={arr.weather}\r\n            foreCastData={arr.forecast.list}\r\n            isLogin={this.props.isLogin}\r\n            saveWeatherProfile={this.saveWeatherProfile}\r\n            deleteWeatherProfile={this.deleteWeatherProfile}\r\n            index={i}\r\n            save={arr.save}\r\n          />\r\n        </Grid>\r\n      );\r\n    });\r\n\r\n    return (\r\n      <div>\r\n        <Grid\r\n          container\r\n          direction=\"row-reverse\"\r\n          justify=\"space-around\"\r\n          alignItems=\"center\"\r\n          spacing={4}\r\n        >\r\n          {myWeatherLoc}\r\n        </Grid>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(Profile);\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\r\nimport SignIn from \"../../components/Signin/SignIn\";\r\nimport Register from \"../../components/Register/Register\";\r\nimport App from \"../App/App\";\r\nimport Clouds from \"../../components/Clouds/Clouds\";\r\nimport Navbar from \"../../components/NavBar/Navbar\";\r\nimport ProtectedRoute from \"../../components/ProtectedRoute/ProtectedRoute\";\r\nimport Profile from \"../../components/Profile/Profile\";\r\nimport {\r\n  setSearchField,\r\n  loadUser,\r\n  userLogIn,\r\n  resetWeather,\r\n  resetWeatherForeCast\r\n} from \"../../actions/actions\";\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    searchField: state.searchWeather.searchField,\r\n    user: state.loadUser.user,\r\n    isLogin: state.userLogIn.bol\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    onSearch: event => {\r\n      if (event.keyCode === 13 || event.which === 13) {\r\n        dispatch(setSearchField(event.target.value));\r\n        event.target.value = \"\";\r\n      }\r\n    },\r\n    loadUserProfile: user => {\r\n      dispatch(loadUser(user));\r\n    },\r\n    logIn: bol => {\r\n      dispatch(userLogIn(bol));\r\n    },\r\n    resetWeatherNav: () => dispatch(resetWeather()),\r\n    resetWeatherForeCastNav: () => dispatch(resetWeatherForeCast())\r\n  };\r\n};\r\n\r\nclass RouterApp extends Component {\r\n  componentDidMount(){\r\n    console.log(\"yea this is the route\");\r\n  }\r\n  render() {\r\n    const {\r\n      searchField,\r\n      onSearch,\r\n      loadUserProfile,\r\n      logIn,\r\n      user,\r\n      isLogin,\r\n      resetWeatherForeCastNav,\r\n      resetWeatherNav\r\n    } = this.props;\r\n    const defaultWeatherLocation = \"london,uk\";\r\n    return (\r\n      <div>\r\n        <Clouds />\r\n        <Router>\r\n          <Navbar onSearch={onSearch} logIn={logIn} isLogin={isLogin}></Navbar>\r\n          <Switch>\r\n            <Route\r\n              path=\"/weather\"\r\n              exact\r\n              component={props => (\r\n                <App searchField={searchField || defaultWeatherLocation} />\r\n              )}\r\n            />\r\n            <Route\r\n              path=\"/register\"\r\n              exact\r\n              component={props => (\r\n                <Register\r\n                  loadUserProfile={loadUserProfile}\r\n                  logIn={logIn}\r\n                  {...props}\r\n                />\r\n              )}\r\n            />\r\n            <Route\r\n              path=\"/login\"\r\n              exact\r\n              component={props => (\r\n                <SignIn\r\n                  loadUserProfile={loadUserProfile}\r\n                  logIn={logIn}\r\n                  resetWeatherIn={resetWeatherNav}\r\n                  resetWeatherForeCastIn={resetWeatherForeCastNav}\r\n                  {...props}\r\n                />\r\n              )}\r\n            />\r\n            <ProtectedRoute\r\n              path=\"/profile\"\r\n              exact\r\n              component={Profile}\r\n              user={user}\r\n              isLogin={isLogin}\r\n            />\r\n          </Switch>\r\n        </Router>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(RouterApp);\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import {\r\n  CHANGE_SEARCH_FIELD,\r\n  USER_LOG_IN,\r\n  REQUEST_WEATHER_PENDING,\r\n  REQUEST_WEATHER_SUCCESS,\r\n  REQUEST_WEATHER_FAILED,\r\n  REQUEST_WEATHER_RESET,\r\n  REQUEST_WEATHER_FORECAST_PENDING,\r\n  REQUEST_WEATHER_FORECAST_SUCCESS,\r\n  REQUEST_WEATHER_FORECAST_FAILED,\r\n  REQUEST_WEATHER_FORECAST_RESET,\r\n  REQUEST_WEATHER_AND_FORECAST_PENDING,\r\n  REQUEST_WEATHER_AND_FORECAST_SUCCESS,\r\n  REQUEST_WEATHER_AND_FORECAST_FAILED,\r\n  REQUEST_WEATHER_AND_FORECAST_RESET,\r\n  LOAD_USER\r\n} from \"../constants/constants\";\r\n\r\nconst initialStateSearch = {\r\n  searchField: \"\"\r\n};\r\n\r\nexport const searchWeather = (state = initialStateSearch, action = {}) => {\r\n  switch (action.type) {\r\n    case CHANGE_SEARCH_FIELD:\r\n      return Object.assign({}, state, { searchField: action.payload });\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nconst initialStateWeather = {\r\n  isPendingWeather: \"false\",\r\n  weather: {},\r\n  errorWeather: \"\"\r\n};\r\n\r\nexport const requestWeather = (state = initialStateWeather, action = {}) => {\r\n  switch (action.type) {\r\n    case REQUEST_WEATHER_PENDING:\r\n      return Object.assign({}, state, { isPendingWeather: true });\r\n    case REQUEST_WEATHER_SUCCESS:\r\n      return Object.assign({}, state, {\r\n        weather: action.payload,\r\n        isPendingWeather: false\r\n      });\r\n    case REQUEST_WEATHER_FAILED:\r\n      return Object.assign({}, state, {\r\n        error: action.payload,\r\n        isPendingWeather: false\r\n      });\r\n    case REQUEST_WEATHER_RESET:\r\n      return Object.assign({}, state, { weather: {} });\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nconst initialStateWeatherForecast = {\r\n  isPendingWeatherForecast: \"false\", //so it doesnt render the weather component before the data is retrieve from api\r\n  weatherForecast: {},\r\n  errorForecast: \"\"\r\n};\r\n\r\nexport const requestWeatherForecast = (\r\n  state = initialStateWeatherForecast,\r\n  action = {}\r\n) => {\r\n  switch (action.type) {\r\n    case REQUEST_WEATHER_FORECAST_PENDING:\r\n      return Object.assign({}, state, { isPendingWeatherForecast: true });\r\n    case REQUEST_WEATHER_FORECAST_SUCCESS:\r\n      return Object.assign({}, state, {\r\n        weatherForecast: action.payload,\r\n        isPendingWeatherForecast: false\r\n      });\r\n    case REQUEST_WEATHER_FORECAST_FAILED:\r\n      return Object.assign({}, state, {\r\n        error: action.payload,\r\n        isPendingWeatherForecast: false\r\n      });\r\n    case REQUEST_WEATHER_FORECAST_RESET:\r\n      return Object.assign({}, state, { weatherForecast: {} });\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nconst initialStateWeatherAndForecast = {\r\n    isPendingWeatherAndForecast: \"false\", //so it doesnt render the weather component before the data is retrieve from api\r\n    data: [],\r\n    error: \"\"\r\n  };\r\n  \r\n  export const requestWeatherAndForecast = (\r\n    state = initialStateWeatherAndForecast,\r\n    action = {}\r\n  ) => {\r\n    console.log(\"this is\", action.type);\r\n    switch (action.type) {\r\n      case REQUEST_WEATHER_AND_FORECAST_PENDING:\r\n        return Object.assign({}, state, { isPendingWeatherAndForecast: true });\r\n      case REQUEST_WEATHER_AND_FORECAST_SUCCESS:\r\n        return Object.assign({}, state, {\r\n          data: action.payload,\r\n          isPendingWeatherAndForecast: false\r\n        });\r\n      case REQUEST_WEATHER_AND_FORECAST_FAILED:\r\n        return Object.assign({}, state, {\r\n          error: action.payload,\r\n          isPendingWeatherAndForecast: false\r\n        });\r\n      case REQUEST_WEATHER_AND_FORECAST_RESET:\r\n        return Object.assign({}, state, { data: {} });\r\n      default:\r\n        return state;\r\n    }\r\n  };\r\n\r\nconst initialUser = {\r\n  user: []\r\n};\r\n\r\nexport const loadUser = (state = initialUser, action = {}) => {\r\n  console.log(\"loaduser is this\");\r\n  switch (action.type) {\r\n    case LOAD_USER:\r\n      return Object.assign({}, state, { user: action.payload });\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nconst initialLog = {\r\n  bol: false\r\n};\r\n\r\nexport const userLogIn = (state = initialLog, action = {}) => {\r\n  switch (action.type) {\r\n    case USER_LOG_IN:\r\n      return Object.assign({}, state, { bol: action.payload });\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport RouterApp from \"./containers/Router/Router\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\nimport { Provider } from \"react-redux\";\r\nimport { createStore, applyMiddleware, combineReducers } from \"redux\";\r\nimport {\r\n  searchWeather,\r\n  requestWeather,\r\n  requestWeatherForecast,\r\n  loadUser,\r\n  userLogIn,\r\n  requestWeatherAndForecast\r\n} from \"../src/reducer/reducer\";\r\nimport { createLogger } from \"redux-logger\";\r\nimport thunkMiddleware from \"redux-thunk\";\r\n\r\nconst logger = createLogger();\r\n\r\nconst rootReducer = combineReducers({\r\n  requestWeatherAndForecast,\r\n  searchWeather,\r\n  requestWeather,\r\n  requestWeatherForecast,\r\n  loadUser,\r\n  userLogIn,\r\n  \r\n});\r\nconst store = createStore(\r\n  rootReducer,\r\n  applyMiddleware(thunkMiddleware, logger)\r\n);\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <RouterApp />\r\n  </Provider>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}