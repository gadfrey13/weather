{"version":3,"sources":["components/Signin/SignIn.js","components/Register/Register.js","components/Clouds/Clouds.js","components/NavBar/Navbar.js","components/Weather/WeatherCard/WeatherCard.js","components/Weather/WeatherContainer/WeatherContainer.js","components/Loading/Loading.js","components/ErrorBoundary/ErrorBoundry.js","containers/App/App.js","containers/Router/Router.js","serviceWorker.js","index.js"],"names":["Copyright","Typography","variant","color","align","Link","href","Date","getFullYear","useStyles","makeStyles","theme","body","backgroundColor","palette","common","white","paper","marginTop","spacing","display","flexDirection","alignItems","avatar","margin","secondary","main","form","width","submit","label","SignIn","classes","Container","component","maxWidth","CssBaseline","className","Avatar","noValidate","TextField","required","fullWidth","id","name","autoComplete","autoFocus","type","FormControlLabel","control","Checkbox","value","Button","Grid","container","item","xs","Box","mt","Register","sm","justify","Clouds","props","nav","opacity","background","link","textDecoration","root","flexGrow","menuButton","marginRight","title","search","position","borderRadius","shape","fade","marginLeft","breakpoints","up","searchIcon","height","pointerEvents","justifyContent","inputRoot","inputInput","padding","transition","transitions","create","Navbar","onSearch","AppBar","Toolbar","to","InputBase","placeholder","input","inputProps","onKeyDown","card","media","paddingLeft","tc","textAlign","marginBottom","WeatherCard","city","country","description","icon","windSpeed","temp","humidity","foreCast","arrayDays","map","day","i","key","date","maxTemp","src","alt","minTemp","Card","raised","CardHeader","CardContent","CardMedia","WeatherContainer","weatherData","foreCastData","data","dt_txt","split","filter","index","arr","indexOf","forecast","dateForeCast","groupforecast","min","max","forEach","Number","Math","ceil","weather","console","log","sys","wind","speed","Loading","ErrorBoundry","state","hasError","this","setState","children","Component","API_KEY","App","getData","property","fetch","then","res","json","cod","loadWeatherPage","catch","err","loadingWeather","loadingForeCast","getCurrentWeather","getForeCast","prevProps","prevState","list","RouterApp","event","keyCode","which","target","toLowerCase","length","path","exact","Boolean","window","location","hostname","match","ReactDOM","render","Router","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.1f072fc2.chunk.js","sourcesContent":["import React from 'react';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Button from '@material-ui/core/Button';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport Link from '@material-ui/core/Link';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Box from '@material-ui/core/Box';\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Container from '@material-ui/core/Container';\r\nimport './Signin.css';\r\n\r\nfunction Copyright() {\r\n  return (\r\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\r\n      {'Copyright © '}\r\n      <Link color=\"inherit\" href=\"https://material-ui.com/\">\r\n        Your Website\r\n      </Link>{' '}\r\n      {new Date().getFullYear()}\r\n      {'.'}\r\n    </Typography>\r\n  );\r\n}\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  '@global': {\r\n    body: {\r\n      backgroundColor: theme.palette.common.white,\r\n    },\r\n  },\r\n  paper: {\r\n    marginTop: theme.spacing(8),\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.secondary.main,\r\n  },\r\n  form: {\r\n    width: '100%', // Fix IE 11 issue.\r\n    marginTop: theme.spacing(1),\r\n    color: 'white'\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n  label: {\r\n    color: 'white'\r\n  }\r\n}));\r\n\r\nconst SignIn = () => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Container component=\"main\" maxWidth=\"xs\">\r\n      <CssBaseline />\r\n      <div className={classes.paper}>\r\n        <Avatar className={classes.avatar}>\r\n          <LockOutlinedIcon />\r\n        </Avatar>\r\n        <Typography component=\"h1\" variant=\"h5\">\r\n          Sign in\r\n        </Typography>\r\n        <form className={classes.form} noValidate>\r\n          <TextField\r\n            \r\n            margin=\"normal\"\r\n            required\r\n            fullWidth\r\n            id=\"email\"\r\n            label=\"Email Address\"\r\n            name=\"email\"\r\n            autoComplete=\"email\"\r\n            autoFocus\r\n           \r\n          />\r\n          <TextField\r\n            variant=\"outlined\"\r\n            margin=\"normal\"\r\n            required\r\n            fullWidth\r\n            name=\"password\"\r\n            label=\"Password\"\r\n            type=\"password\"\r\n            id=\"password\"\r\n            autoComplete=\"current-password\"\r\n          />\r\n          <FormControlLabel\r\n            control={<Checkbox value=\"remember\" color=\"primary\" />}\r\n            label=\"Remember me\"\r\n          />\r\n          <Button\r\n            type=\"submit\"\r\n            fullWidth\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            className={classes.submit}\r\n          >\r\n            Sign In\r\n          </Button>\r\n          <Grid container>\r\n            <Grid item xs>\r\n              <Link href=\"#\" variant=\"body2\">\r\n                Forgot password?\r\n              </Link>\r\n            </Grid>\r\n            <Grid item>\r\n              <Link href=\"#\" variant=\"body2\">\r\n                {\"Don't have an account? Sign Up\"}\r\n              </Link>\r\n            </Grid>\r\n          </Grid>\r\n        </form>\r\n      </div>\r\n      <Box mt={8}>\r\n        <Copyright />\r\n      </Box>\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default SignIn;","import React from 'react';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Button from '@material-ui/core/Button';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport Link from '@material-ui/core/Link';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Box from '@material-ui/core/Box';\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Container from '@material-ui/core/Container';\r\n\r\nfunction Copyright() {\r\n  return (\r\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\r\n      {'Copyright © '}\r\n      <Link color=\"inherit\" href=\"https://material-ui.com/\">\r\n        Your Website\r\n      </Link>{' '}\r\n      {new Date().getFullYear()}\r\n      {'.'}\r\n    </Typography>\r\n  );\r\n}\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  '@global': {\r\n    body: {\r\n      backgroundColor: theme.palette.common.white,\r\n    },\r\n  },\r\n  paper: {\r\n    marginTop: theme.spacing(8),\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.secondary.main,\r\n  },\r\n  form: {\r\n    width: '100%', // Fix IE 11 issue.\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n}));\r\n\r\nexport default function Register() {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Container component=\"main\" maxWidth=\"xs\">\r\n      <CssBaseline />\r\n      <div className={classes.paper}>\r\n        <Avatar className={classes.avatar}>\r\n          <LockOutlinedIcon />\r\n        </Avatar>\r\n        <Typography component=\"h1\" variant=\"h5\">\r\n          Register\r\n        </Typography>\r\n        <form className={classes.form} noValidate>\r\n          <Grid container spacing={2}>\r\n            <Grid item xs={12} sm={6}>\r\n              <TextField\r\n                autoComplete=\"fname\"\r\n                name=\"firstName\"\r\n                variant=\"outlined\"\r\n                required\r\n                fullWidth\r\n                id=\"firstName\"\r\n                label=\"First Name\"\r\n                autoFocus\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12} sm={6}>\r\n              <TextField\r\n                variant=\"outlined\"\r\n                required\r\n                fullWidth\r\n                id=\"lastName\"\r\n                label=\"Last Name\"\r\n                name=\"lastName\"\r\n                autoComplete=\"lname\"\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                variant=\"outlined\"\r\n                required\r\n                fullWidth\r\n                id=\"email\"\r\n                label=\"Email Address\"\r\n                name=\"email\"\r\n                autoComplete=\"email\"\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                variant=\"outlined\"\r\n                required\r\n                fullWidth\r\n                name=\"password\"\r\n                label=\"Password\"\r\n                type=\"password\"\r\n                id=\"password\"\r\n                autoComplete=\"current-password\"\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <FormControlLabel\r\n                control={<Checkbox value=\"allowExtraEmails\" color=\"primary\" />}\r\n                label=\"I want to receive inspiration, marketing promotions and updates via email.\"\r\n              />\r\n            </Grid>\r\n          </Grid>\r\n          <Button\r\n            type=\"submit\"\r\n            fullWidth\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            className={classes.submit}\r\n          >\r\n            Sign Up\r\n          </Button>\r\n          <Grid container justify=\"flex-end\">\r\n            <Grid item>\r\n              <Link href=\"#\" variant=\"body2\">\r\n                Already have an account? Sign in\r\n              </Link>\r\n            </Grid>\r\n          </Grid>\r\n        </form>\r\n      </div>\r\n      <Box mt={5}>\r\n        <Copyright />\r\n      </Box>\r\n    </Container>\r\n  );\r\n}","import React from 'react';\r\nimport './Clouds.css';\r\n\r\nconst Clouds = (props) => {\r\n    return(\r\n    \r\n    <div className=\"background-wrap\">\r\n        <div className=\"x1\">\r\n        <div className=\"cloud\"></div>\r\n    </div>\r\n\r\n    <div className=\"x2\">\r\n        <div className=\"cloud\"></div>\r\n    </div>\r\n\r\n    <div className=\"x3\">\r\n        <div className=\"cloud\"></div>\r\n    </div>\r\n\r\n    <div className=\"x4\">\r\n        <div className=\"cloud\"></div>\r\n    </div>\r\n\r\n    <div className=\"x5\">\r\n        <div className=\"cloud\"></div>\r\n    </div>\r\n    </div>\r\n    )\r\n}\r\n\r\nexport default Clouds;","import React from 'react';\r\nimport { fade,makeStyles } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\nimport InputBase from '@material-ui/core/InputBase';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport {Link} from 'react-router-dom';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  nav: {\r\n      opacity: 1,\r\n      color: 'white',\r\n      background: '#00b4ff'\r\n    },\r\n  link: {\r\n    color: 'white',\r\n    textDecoration: 'none'\r\n  },\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  menuButton: {\r\n    marginRight: theme.spacing(2),\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n  },\r\n  search: {\r\n    position: 'relative',\r\n    borderRadius: theme.shape.borderRadius,\r\n    backgroundColor: fade(theme.palette.common.white, 0.15),\r\n    '&:hover': {\r\n      backgroundColor: fade(theme.palette.common.white, 0.25),\r\n    },\r\n    marginRight: theme.spacing(2),\r\n    marginLeft: 0,\r\n    width: '100%',\r\n    [theme.breakpoints.up('sm')]: {\r\n      marginLeft: theme.spacing(3),\r\n      width: 'auto',\r\n    },\r\n  },\r\n  searchIcon: {\r\n    width: theme.spacing(7),\r\n    height: '100%',\r\n    position: 'absolute',\r\n    pointerEvents: 'none',\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n  },\r\n  inputRoot: {\r\n    color: 'inherit',\r\n  },\r\n  inputInput: {\r\n    padding: theme.spacing(1, 1, 1, 7),\r\n    transition: theme.transitions.create('width'),\r\n    width: '100%',\r\n    [theme.breakpoints.up('md')]: {\r\n      width: 200,\r\n    },\r\n  },\r\n}));\r\n\r\nconst Navbar = ({onSearch}) => {\r\n  const classes = useStyles();\r\n  return (\r\n    <div className={classes.root}>\r\n      <AppBar className={classes.nav}  position=\"static\">\r\n        <Toolbar>\r\n          <Typography variant=\"h6\" className={classes.title}>\r\n            <Link className={classes.link} to=\"/weather\">Weather App</Link>\r\n          </Typography>\r\n          <div className={classes.search}>\r\n            <div className={classes.searchIcon}>\r\n              <SearchIcon />\r\n            </div>\r\n            <InputBase\r\n              placeholder=\"City,Country\"\r\n              classes={{\r\n                root: classes.inputRoot,\r\n                input: classes.inputInput,\r\n              }}\r\n              inputProps={{ 'aria-label': 'search' }}\r\n              onKeyDown={onSearch}\r\n            />\r\n          </div>\r\n          <Link className={classes.link} to=\"/login\"><Button color=\"inherit\">Login</Button></Link>\r\n          <Link  className={classes.link} to=\"/register\"><Button color=\"inherit\">Register</Button></Link>\r\n        </Toolbar>\r\n      </AppBar>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Navbar;","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardActions from \"@material-ui/core/CardActions\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport CardHeader from \"@material-ui/core/CardHeader\";\r\nimport CardMedia from \"@material-ui/core/CardMedia\";\r\nimport Countries from \"../../Countries/Countries\";\r\n\r\nconst useStyles = makeStyles({\r\n  card: {\r\n    maxWidth: 350,\r\n    flexGrow: 1,\r\n    backgroundColor: \"white\"\r\n  },\r\n  media: {\r\n    width: \"100px\",\r\n    height: \"auto\",\r\n    paddingLeft: \"20px\"\r\n  },\r\n  tc: {\r\n    textAlign: \"center\"\r\n  },\r\n  margin: {\r\n    marginTop: \"50px\",\r\n    marginBottom: \"25px\"\r\n  }\r\n});\r\n\r\nconst getCountryName = countryCode => {\r\n  const name = countryCode.toUpperCase();\r\n  if (Countries.hasOwnProperty(name)) {\r\n    return Countries[name];\r\n  } else {\r\n    return countryCode;\r\n  }\r\n};\r\n\r\n\r\nconst WeatherCard = ({city,country,description,icon,windSpeed,temp,humidity,foreCast}) => {\r\n  \r\n  const classes = useStyles();\r\n  const arrayDays = foreCast.map((day, i) => {\r\n    return (\r\n      <Grid className={`${classes.tc}`} key={i} item xs={2}>\r\n        <Typography component=\"p\">{day.date}</Typography>\r\n        <br/>\r\n        <Typography component=\"p\">{day.maxTemp}f</Typography>\r\n         <img src={`http://openweathermap.org/img/wn/${day.icon}.png`} alt=\"icon\"/>\r\n        <Typography component=\"p\">{day.minTemp}f</Typography>\r\n      </Grid>\r\n    );\r\n  });\r\n\r\n  return (\r\n    <Card raised justify=\"space-evenly\" className={classes.card}>\r\n      <Grid container spacing={0}>\r\n        <Grid item xs={12}>\r\n          <CardHeader title={`${city},${country}`} />\r\n        </Grid>\r\n        <Grid item xs={12}>\r\n          <CardContent>\r\n            <h4>\r\n              {description}{\" \"}\r\n              <span>\r\n                 Wind {windSpeed}m/h <span>Huminity {humidity}</span>\r\n              </span>\r\n            </h4>\r\n          </CardContent>\r\n        </Grid>\r\n        <Grid item xs={6} sm={6}>\r\n          <CardMedia\r\n            component=\"img\"\r\n            className={classes.media}\r\n            src={`http://openweathermap.org/img/wn/${icon}.png`}\r\n            title=\"Icon\"\r\n          />\r\n        </Grid>\r\n        <Grid className={classes.tc} item xs={6} sm={6}>\r\n          <h2>{temp}f</h2>\r\n        </Grid>\r\n        <Grid className={classes.margin} item xs={12}>\r\n          <Grid justify=\"space-around\" container spacing={0}>\r\n            {arrayDays}\r\n          </Grid>\r\n        </Grid>\r\n      </Grid>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default WeatherCard;\r\n","import React from 'react';\r\nimport WeatherCard from '../WeatherCard/WeatherCard';\r\nimport './WeatherContainer.css';\r\nconst WeatherContainer = ({weatherData,foreCastData}) => {\r\n\r\n    //Get All the Dates\r\n    const dateKey = foreCastData.map((data) => {\r\n        const date = data.dt_txt.split(/[ ]+/)[0];\r\n        return date;\r\n    })\r\n    //Only Keep Distinct Dates\r\n    const distinctDateKey = dateKey.filter((date,index,arr) => {\r\n        return arr.indexOf(date) === index;\r\n    })\r\n\r\n    //Group all forecast by dates\r\n    const groupForeCastByDate = distinctDateKey.map(date => {\r\n        return foreCastData.filter(forecast => {\r\n            const dateForeCast = forecast.dt_txt.split(/[ ]+/)[0];\r\n            return date === dateForeCast;\r\n        })\r\n    })\r\n    \r\n  \r\n    //Go to each group array and get its min temp and max temp. get the date. icon\r\n    const foreCast = groupForeCastByDate.map(groupforecast => {\r\n        let min = 100000;\r\n        let max = -100000;\r\n        let date = '';\r\n        let icon = '';\r\n        groupforecast.forEach(forecast => {\r\n          \r\n            if(Number(forecast.main.temp) < min){\r\n                min = Math.ceil(forecast.main.temp);\r\n            }\r\n\r\n            if(Number(forecast.main.temp) > max){\r\n                max = Math.ceil(forecast.main.temp);\r\n                const temp = new Date(forecast.dt_txt.split(/[ ]+/)[0])+\"\";\r\n                date = temp.split(/[ ]+/)[0];\r\n                icon = forecast.weather[0].icon;\r\n            }\r\n        })\r\n        return {\r\n            maxTemp: max,\r\n            minTemp: min,\r\n            date: date,\r\n            icon: icon\r\n        }\r\n    })\r\n    console.log(\"weather container\");\r\n   \r\n\r\n    return ( \r\n   \r\n    <div className=\"weather\">\r\n        <WeatherCard \r\n        city={weatherData.name} \r\n        country={weatherData.sys.country}\r\n        description={weatherData.weather[0].main}\r\n        icon={weatherData.weather[0].icon}\r\n        windSpeed={weatherData.wind.speed}\r\n        temp={weatherData.main.temp}\r\n        humidity={weatherData.main.humidity}\r\n        foreCast={foreCast}\r\n        />\r\n    </div> \r\n    )\r\n}\r\n\r\nexport default WeatherContainer;","import React from \"react\";\r\nimport './Loading.css';\r\nconst Loading = () => {\r\n  return (\r\n    <div className=\"lds-spinner\">\r\n      <div></div>\r\n      <div></div>\r\n      <div></div>\r\n      <div></div>\r\n      <div></div>\r\n      <div></div>\r\n      <div></div>\r\n      <div></div>\r\n      <div></div>\r\n      <div></div>\r\n      <div></div>\r\n      <div></div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Loading;\r\n","import React, {Component} from 'react';\r\n\r\nclass ErrorBoundry extends Component {\r\n    constructor(props){//allow access to props\r\n        super(props);\r\n        this.state = {\r\n            hasError: false\r\n        }\r\n    }\r\n\r\n    componentDidCatch(){//Similar to try catch. If any error occur in the children this components run\r\n        this.setState({hasError: true});\r\n    }\r\n\r\n    render(){\r\n        if(this.state.hasError){\r\n            return <h1>Oooops. That is not good</h1>\r\n        }else{\r\n            return this.props.children;//anything between the Error Boundary\r\n        }\r\n    }\r\n}\r\n\r\nexport default ErrorBoundry;","import React, {Component} from 'react';\nimport 'typeface-roboto';\nimport './App.css';\nimport Clouds from '../../components/Clouds/Clouds';\nimport Navbar from '../../components/NavBar/Navbar';\nimport { taggedTemplateExpression } from '@babel/types';\nimport WeatherContainer from '../../components/Weather/WeatherContainer/WeatherContainer';\nimport Loading from '../../components/Loading/Loading';\nimport ErrorBoundary from '../../components/ErrorBoundary/ErrorBoundry';\nimport { BrowserRouter as Router, Route, Link, Switch } from \"react-router-dom\";\nimport SignIn from '../../components/Signin/SignIn';\nimport Register from '../../components/Register/Register';\n//API Key Time\nconst API_KEY = '640285b24dd4963e697ea5be67cf8165';\n\nclass App extends Component {\n\n  constructor(props){\n    super(props)\n    this.state = {\n      country: props.country,\n      city: props.city,\n      weatherData: {},\n      foreCastData: {},\n      loadingWeather: true,\n      loadingForeCast: true,\n    }\n  }\n\n  componentDidMount(){\n    this.getCurrentWeather();\n    this.getForeCast();\n  }\n\n  componentDidUpdate(prevProps,prevState){\n   \n    if(this.state.city !== prevState.city){\n        this.getCurrentWeather();\n        this.getForeCast();\n    }\n  }\n\n  // Parameter: property, type\n  getData = (property,type=\"weather\") => {\n    const {country,city} = this.state;\n    fetch(`https://cors-anywhere.herokuapp.com/http://api.openweathermap.org/data/2.5/${type}?q=${city},${country}&appid=${API_KEY}&units=imperial`)\n    .then(res => {\n      return res.json();\n    })\n    .then(data => {\n\n      if(type===\"weather\" && Number(data.cod) === 200){\n        this.setState({weatherData: data});\n      }else if(type === \"forecast\" && Number(data.cod) === 200){\n        this.setState({foreCastData: data})\n      }\n\n      \n      this.loadWeatherPage(type,data.cod);\n     \n    }).catch(err => {\n      console.log(err);\n    });\n  }\n\n  //prevents props from being undefined\n  //reason: component is rendered before data is returned\n  loadWeatherPage = (type,cod) => {\n     \n      if(type===\"weather\" && Number(cod) === 200){\n        this.setState({loadingWeather: false});\n      }else if(type === \"forecast\" && Number(cod) === 200){\n        this.setState({loadingForeCast: false})\n      }\n\n  }\n\n  getCurrentWeather = () => {\n      this.getData(\"weatherData\");\n  }\n\n  getForeCast = () => {\n      this.getData(\"foreCastData\", \"forecast\");\n  }\n\n\n\n  render(){\n    const {weatherData, foreCastData} = this.state;\n    return(\n      <div>\n        <ErrorBoundary>\n        {(!this.state.loadingWeather && !this.state.loadingForeCast) ? <WeatherContainer weatherData={weatherData} foreCastData={foreCastData.list} />  : <Loading />}\n        </ErrorBoundary>   \n      </div>\n    )\n  }\n}\n\nexport default App;\n","import React, { Component } from \"react\";\r\nimport { taggedTemplateExpression } from \"@babel/types\";\r\nimport { BrowserRouter as Router, Route, Link, Switch } from \"react-router-dom\";\r\nimport SignIn from \"../../components/Signin/SignIn\";\r\nimport Register from \"../../components/Register/Register\";\r\nimport App from \"../App/App\";\r\nimport Clouds from \"../../components/Clouds/Clouds\";\r\nimport Navbar from \"../../components/NavBar/Navbar\";\r\nclass RouterApp extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      country: \"US\",\r\n      city: \"Stockton\",\r\n      input: '',\r\n    };\r\n  }\r\n\r\n  onSearch = event => {\r\n    if (event.keyCode === 13 || event.which === 13) {\r\n      const split = event.target.value.toLowerCase().split(/[ ,]+/);\r\n      console.log(\"state\",this.state.input);\r\n      if (split.length == 2) {\r\n        const city = split[0];\r\n        const country = split[1];\r\n        this.setState({ country: country, city: city });\r\n      }\r\n\r\n      if (split.length == 3) {\r\n        const city = split[0] + \" \" + split[1];\r\n        const country = split[2];\r\n        this.setState({ country: country, city: city });\r\n      }\r\n      event.target.value = \"\";\r\n    }\r\n  };\r\n\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Clouds />\r\n        <Router>\r\n          <Navbar onSearch={this.onSearch}></Navbar>\r\n          <Switch>\r\n            <Route\r\n              path=\"/weather\"\r\n              exact\r\n              component={props => (\r\n                <App city={this.state.city} country={this.state.country} />\r\n              )}\r\n            />\r\n            <Route path=\"/register\" exact component={Register} />\r\n            <Route path=\"/login\" exact component={SignIn} />\r\n          </Switch>\r\n        </Router>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default RouterApp;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport RouterApp from './containers/Router/Router';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<RouterApp />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}